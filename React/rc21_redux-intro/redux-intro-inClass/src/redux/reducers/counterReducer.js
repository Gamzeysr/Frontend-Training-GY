import { CLEAR, DECREMENT, INCREMENT } from "../types/counterType";

const initialState = {
  counter: 0,
};

const counterReducer = (state = initialState, action) => {
  //* state = initialState yazmamÄ±zÄ±n sebebi state baslangÄ±c verdik o yÃ¼zden.
  //* belirtmesek de oluyordu ama genelde reduxde belirterek yapÄ±yoruz. 
  switch (action.type) {
    case INCREMENT:
      // artÄ±rma ğŸ‘†
      return { counter: state.counter + 1 };
    case DECREMENT:
      // azaltma ğŸ‘†
      return { counter: state.counter - 1 };
    case CLEAR:
      // silmeğŸ‘†
      return initialState;
    default:
      return state;
    // burada illa statin ilk halini yazmalÄ±yÄ±z. 
  }
};
export default counterReducer;
//! Counteri artÄ±rma azaltma silme iÅŸlemlerini yapÄ±caz burada ki switch case yapÄ±larÄ±yla.
//!âœ¨ Burada neden BUYUK HARFLE yazÄ±yoruz sebebi: kodlamada hiÃ§ degeri deÄŸiÅŸmeyenlere biz constÄ±t deriz. Bir kere baslangÄ±ctta deger alÄ±yor b-ve bir daha deÄŸiÅŸmiyor.ve bu constÄ±tlar string se genellkile buyuk harfle yazÄ±lÄ±r.
//* reducer lar de state ve action alÄ±yor.reducer Ä±n birinci parametresi her zaman statedir.Ä°kinci parametre actiondur.âœ¨{typeipayload}âœ¨ ÅŸeklinde de gÃ¶rebiliriz.
//* payload da dispact in gÃ¶nderdiÄŸÄŸi veri.
//?? Birden fazla redureim olacagÄ±ndan o yuzden reducer klasÃ¶tÃ¼nde tapoluyorum. ve Her bir INCREMENT'i DECREMENT'i CLEAR'Ä± burada deÄŸiÅŸken olrak kullanÄ±yorum. 